use toy_pack_mp::{decoder_from_slice, DecoderOps};

macro_rules! discard_pass {
    ($name: ident, $bytes: expr) => {
        #[test]
        fn $name() {
            let buf: &[u8] = $bytes;
            let mut decoder = decoder_from_slice(buf);
            assert_eq!(true, decoder.discard_next().is_ok());
            assert_eq!(true, decoder.decode_nil().is_ok());
        }
    };
}

// bytes, must be nill end
discard_pass!(bool, &[0xc3, 0xc0]);
discard_pass!(u8,   &[0xcc, 0x01, 0xc0]);
discard_pass!(u16,  &[0xcd, 0x01, 0x02, 0xc0]);
discard_pass!(u32,  &[0xce, 0x01, 0x02, 0x03, 0x04, 0xc0]);
discard_pass!(u64,  &[0xcf, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0xc0]);

discard_pass!(i8,   &[0xd0, 0x01, 0xc0]);
discard_pass!(i16,  &[0xd1, 0x01, 0x02, 0xc0]);
discard_pass!(i32,  &[0xd2, 0x01, 0x02, 0x03, 0x04, 0xc0]);
discard_pass!(i64,  &[0xd3, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0xc0]);

discard_pass!(f32,  &[0xca, 0x01, 0x02, 0x03, 0x04, 0xc0]);
discard_pass!(f64,  &[0xcb, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0xc0]);

discard_pass!(str8,  &[0xd9, 0x01, 0x61, 0xc0]);
discard_pass!(str16, &[0xda, 0x00, 0x01, 0x61, 0xc0]);
discard_pass!(str32, &[0xdb, 0x00, 0x00, 0x00, 0x01, 0x61, 0xc0]);

discard_pass!(bin8,  &[0xc4, 0x01, 0x61, 0xc0]);
discard_pass!(bin16, &[0xc5, 0x00, 0x01, 0x61, 0xc0]);
discard_pass!(bin32, &[0xc6, 0x00, 0x00, 0x00, 0x01, 0x61, 0xc0]);

discard_pass!(array16, &[0xdc, 0x00, 0x01, 0x61, 0xc0]);
discard_pass!(array32, &[0xdd, 0x00, 0x00, 0x00, 0x01, 0x61, 0xc0]);

discard_pass!(map16, &[0xde, 0x00, 0x01, 0x61, 0x61, 0xc0]);
discard_pass!(map32, &[0xdf, 0x00, 0x00, 0x00, 0x01, 0x61, 0x61, 0xc0]);

discard_pass!(fixext1,  &[0xd4, 0x00, 0x01, 0xc0]);
discard_pass!(fixext2,  &[0xd5, 0x00, 0x01, 0x02, 0xc0]);
discard_pass!(fixext4,  &[0xd6, 0x00, 0x01, 0x02, 0x03, 0x04, 0xc0]);
discard_pass!(fixext8,  &[0xd7, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0xc0]);
discard_pass!(fixext16, &[0xd8, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0xc0]);

//discard_pass!(ext8,  &[0xc7, 0x01, 0x01, 0x61, 0xc0]);
//discard_pass!(ext16, &[0xc8, 0x00, 0x01, 0x01, 0x61, 0xc0]);
//discard_pass!(ext32, &[0xc9, 0x00, 0x00, 0x00, 0x01, 0x01, 0x61, 0xc0]);
